// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/authorise/slack": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Redirect to Slack auth login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Third-Party Auth"
                ],
                "summary": "Redirect to Slack auth login",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    }
                }
            }
        },
        "/authorise/slack/callback": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Link Slack to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Third-Party Auth"
                ],
                "summary": "Link Slack to user",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    }
                }
            }
        },
        "/incidents": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get a list of incidents",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Incidents"
                ],
                "summary": "Get a list of incidents",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utility.IncidentGetResponseBodySchema"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create an incident",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Incidents"
                ],
                "summary": "Create an incident",
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/me": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get basic details about the currently logged in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get basic details about the currently logged in user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utility.UserGetResponseBodySchema"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    }
                }
            }
        },
        "/providers": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get a list of Providers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Get a list of Providers",
                "parameters": [
                    {
                        "enum": [
                            "log",
                            "alert"
                        ],
                        "type": "string",
                        "description": "The type of provider",
                        "name": "provider_type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utility.ProvidersGetResponseSchema"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Create a provider",
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    }
                }
            }
        },
        "/providers/{provider_id}": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Update a provider",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Provider ID",
                        "name": "provider_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Delete a provider",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Provider ID",
                        "name": "provider_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    }
                }
            }
        },
        "/teams": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create a Team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Create a Team",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    }
                }
            }
        },
        "/teams/{team_id}": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete a Team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Delete a Team",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Team ID",
                        "name": "team_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Create a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "The request body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utility.UserPostRequestBodySchema"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "description": "GET URL of the created User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Login as a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login as a user",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utility.UserLoginRequestBodySchema"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorResponseSchema"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "utility.ErrorResponseSchema": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "utility.HostMachineGetResponseBodySchema": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "ip4": {
                    "type": "string"
                },
                "ip6": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "team": {
                    "$ref": "#/definitions/utility.TeamGetResponseBodySchema"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "utility.IncidentGetResponseBodySchema": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "hostsAffected": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utility.HostMachineGetResponseBodySchema"
                    }
                },
                "resolvedAt": {
                    "type": "string"
                },
                "resolvedBy": {
                    "$ref": "#/definitions/utility.UserGetResponseBodySchema"
                },
                "summary": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "utility.KeyValueSchema": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "utility.ProviderGetResponseSchema": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utility.KeyValueSchema"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "utility.ProvidersGetResponseSchema": {
            "type": "object",
            "properties": {
                "providers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utility.ProviderGetResponseSchema"
                    }
                }
            }
        },
        "utility.TeamGetResponseBodySchema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "utility.UserGetResponseBodySchema": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slackID": {
                    "type": "string"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utility.TeamGetResponseBodySchema"
                    }
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "utility.UserLoginRequestBodySchema": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "utility.UserPostRequestBodySchema": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "description": "The JWT",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:5000",
	BasePath:         "/",
	Schemes:          []string{"https"},
	Title:            "A.I.M.S Swagger",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
